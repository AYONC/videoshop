/*
 * This file is generated by jOOQ.
*/
package com.ridi.generated.tables;


import com.ridi.generated.Keys;
import com.ridi.generated.Tmp;
import com.ridi.generated.tables.records.PostCommentRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostComment extends TableImpl<PostCommentRecord> {

    private static final long serialVersionUID = -917682772;

    /**
     * The reference instance of <code>tmp.post_comment</code>
     */
    public static final PostComment POST_COMMENT = new PostComment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PostCommentRecord> getRecordType() {
        return PostCommentRecord.class;
    }

    /**
     * The column <code>tmp.post_comment.id</code>.
     */
    public final TableField<PostCommentRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>tmp.post_comment.content</code>.
     */
    public final TableField<PostCommentRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>tmp.post_comment.created_at</code>.
     */
    public final TableField<PostCommentRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>tmp.post_comment.user</code>.
     */
    public final TableField<PostCommentRecord, String> USER = createField("user", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>tmp.post_comment.post_id</code>.
     */
    public final TableField<PostCommentRecord, Long> POST_ID = createField("post_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>tmp.post_comment</code> table reference
     */
    public PostComment() {
        this("post_comment", null);
    }

    /**
     * Create an aliased <code>tmp.post_comment</code> table reference
     */
    public PostComment(String alias) {
        this(alias, POST_COMMENT);
    }

    private PostComment(String alias, Table<PostCommentRecord> aliased) {
        this(alias, aliased, null);
    }

    private PostComment(String alias, Table<PostCommentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Tmp.TMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PostCommentRecord> getPrimaryKey() {
        return Keys.KEY_POST_COMMENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PostCommentRecord>> getKeys() {
        return Arrays.<UniqueKey<PostCommentRecord>>asList(Keys.KEY_POST_COMMENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostComment as(String alias) {
        return new PostComment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PostComment rename(String name) {
        return new PostComment(name, null);
    }
}
